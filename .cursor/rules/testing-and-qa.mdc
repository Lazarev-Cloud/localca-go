---
description:
globs:
alwaysApply: false
---
# Testing and Quality Assurance

LocalCA includes a comprehensive testing suite to ensure reliability and correctness.

## Test Structure

- [main_test.go](mdc:main_test.go) - Main test entry point
- [pkg/certificates/ca_test.go](mdc:pkg/certificates/ca_test.go) - CA certificate operations tests
- [pkg/certificates/server_test.go](mdc:pkg/certificates/server_test.go) - Server certificate tests
- [pkg/acme/server_test.go](mdc:pkg/acme/server_test.go) - ACME server tests
- [pkg/acme/jws_test.go](mdc:pkg/acme/jws_test.go) - JWS implementation tests
- [pkg/acme/storage_test.go](mdc:pkg/acme/storage_test.go) - ACME storage tests
- [pkg/storage/storage_test.go](mdc:pkg/storage/storage_test.go) - Storage operations tests

## Running Tests

- `go test ./...` - Run all tests
- `go test ./pkg/certificates` - Run certificate tests only
- `go test -v ./...` - Run tests with verbose output
- [run-tests.sh](mdc:run-tests.sh) - Test script for Linux/macOS
- [run-tests.bat](mdc:run-tests.bat) - Test script for Windows

## Test Coverage

- `go test -cover ./...` - Run tests with coverage reporting
- `go test -coverprofile=coverage.out ./...` - Generate coverage profile
- `go tool cover -html=coverage.out` - View coverage report in browser

## Frontend Testing

- `pnpm test` - Run Jest tests for frontend components
- `pnpm test:watch` - Run tests in watch mode
- `pnpm test:coverage` - Generate test coverage report

## Continuous Integration

- [.github/workflows/](mdc:.github/workflows) - GitHub Actions workflows
  - Build and test on push
  - Docker image building
  - Release automation
