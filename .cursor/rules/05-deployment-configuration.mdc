---
description: 
globs: 
alwaysApply: true
---
# Deployment and Configuration

LocalCA supports multiple deployment options and can be configured to adapt to different environments.

## Deployment Options

### Docker Deployment

The recommended way to deploy LocalCA is using Docker:

- [docker-compose.yml](mdc:docker-compose.yml): Defines the services, networks, and volumes
- [Dockerfile](mdc:Dockerfile): Container configuration for the backend service
- [Dockerfile.frontend](mdc:Dockerfile.frontend): Container configuration for the frontend service

Helper scripts for Docker deployment:
- [run-docker.sh](mdc:run-docker.sh) / [run-docker.bat](mdc:run-docker.bat): Start the application
- [run-tests-docker.sh](mdc:run-tests-docker.sh) / [run-tests-docker.bat](mdc:run-tests-docker.bat): Run tests in Docker

### Standalone Deployment

LocalCA can also be deployed as a standalone application:

- Build the Go backend
- Build the Next.js frontend
- Run the services separately or combined

Development scripts:
- [run-dev.sh](mdc:run-dev.sh) / [run-dev.bat](mdc:run-dev.bat): Start the application in development mode

## Configuration

### Environment Variables

LocalCA is configured through environment variables, defined in [pkg/config/config.go](mdc:pkg/config/config.go):

| Variable | Description | Default |
|----------|-------------|---------|
| `CA_NAME` | Name of the Certificate Authority | "LocalCA" |
| `CA_KEY_FILE` | Path to CA key password file | *required* |
| `ORGANIZATION` | Organization name for certificates | "LocalCA Organization" |
| `COUNTRY` | Country code for certificates | "US" |
| `DATA_DIR` | Storage directory for certificates | "./data" |
| `LISTEN_ADDR` | HTTP server address | ":8080" |
| `TLS_ENABLED` | Enable HTTPS for the management interface | "false" |
| `EMAIL_NOTIFY` | Enable email notifications | "false" |
| `SMTP_*` | SMTP server configuration | *various* |
| `NEXT_PUBLIC_API_URL` | Backend API URL for frontend | "http://localhost:8080" |

### Configuration Files

Primary configuration files:

- [go.mod](mdc:go.mod): Go dependencies
- [package.json](mdc:package.json): Frontend dependencies and scripts
- [next.config.mjs](mdc:next.config.mjs): Next.js configuration
- [tailwind.config.ts](mdc:tailwind.config.ts): Tailwind CSS configuration

### Security Configuration

Security-related configuration:

- CA private key protection with password
- TLS configuration in [main.go](mdc:main.go)
- Authentication configuration in [pkg/handlers/auth.go](mdc:pkg/handlers/auth.go)

## Testing

LocalCA includes comprehensive tests:

- Go backend tests in [main_test.go](mdc:main_test.go) and package-specific test files
- Frontend tests using Jest
- End-to-end testing configuration

Test runners:
- [run-tests.sh](mdc:run-tests.sh) / [run-tests.bat](mdc:run-tests.bat): Run all tests
- [run-tests-docker.sh](mdc:run-tests-docker.sh) / [run-tests-docker.bat](mdc:run-tests-docker.bat): Run tests in Docker

## Security Considerations

Security recommendations:

1. Keep CA private key secure
2. Run behind a reverse proxy/firewall
3. Limit access to authorized users
4. Enable HTTPS for the web interface
5. Never expose to the public internet
