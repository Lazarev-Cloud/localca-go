---
description:
globs:
alwaysApply: false
---
# Common Development Workflows

This guide provides step-by-step instructions for common development tasks in the LocalCA-Go project.

## Adding a New Certificate Type

1. Define the certificate type in [pkg/certificates/types.go](mdc:pkg/certificates/types.go)
2. Implement certificate generation in [pkg/certificates/generator.go](mdc:pkg/certificates/generator.go)
3. Add validation logic in [pkg/certificates/validator.go](mdc:pkg/certificates/validator.go)
4. Update the API endpoints in [pkg/handlers/](mdc:pkg/handlers)
5. Create or update the corresponding frontend form in [components/](mdc:components)
6. Update the frontend API client in [app/api/](mdc:app/api)
7. Add tests for the new certificate type

## Adding a New API Endpoint

1. Define the handler function in [pkg/handlers/](mdc:pkg/handlers)
2. Register the route in [main.go](mdc:main.go) or the appropriate router file
3. Implement the business logic in the relevant service package
4. Create corresponding frontend API route in [app/api/](mdc:app/api)
5. Update the frontend UI to use the new endpoint
6. Add tests for the endpoint

## Adding a New UI Component

1. Create the component in [components/](mdc:components)
2. If needed, add corresponding styles in [styles/](mdc:styles)
3. Integrate the component into the relevant page
4. Add tests for the component
5. Ensure the component is responsive and accessible

## Implementing a New ACME Feature

1. Update the ACME server implementation in [pkg/acme/](mdc:pkg/acme)
2. Register any new endpoints in the ACME server setup
3. Implement the required business logic
4. Add tests for the new feature
5. Update documentation

## Implementing Email Notifications

1. Update the email templates in [templates/](mdc:templates)
2. Modify the email service in [pkg/email/](mdc:pkg/email)
3. Update configuration options in [pkg/config/](mdc:pkg/config)
4. Add tests for the email functionality

## Adding a New Configuration Option

1. Define the option in [pkg/config/](mdc:pkg/config)
2. Add default values and environment variable mapping
3. Update the settings UI in [app/settings/](mdc:app/settings)
4. Add validation if necessary
5. Update documentation
