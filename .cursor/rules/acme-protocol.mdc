---
description:
globs:
alwaysApply: false
---
# ACME Protocol Implementation

LocalCA implements the ACME (Automated Certificate Management Environment) protocol for automated certificate issuance.

## ACME Components

- [pkg/acme/](mdc:pkg/acme) - Core ACME implementation
  - [server.go](mdc:pkg/acme/server.go) - ACME server implementation
  - [jws.go](mdc:pkg/acme/jws.go) - JWS (JSON Web Signature) implementation
  - [storage.go](mdc:pkg/acme/storage.go) - ACME data storage
  - [models.go](mdc:pkg/acme/models.go) - ACME data models

## ACME Flow

1. Client connects to the ACME directory endpoint
2. Client creates or uses an existing account
3. Client creates a new order for a certificate
4. Server issues challenges to verify domain ownership
5. Client completes challenges (HTTP-01)
6. Client submits CSR (Certificate Signing Request)
7. Server issues the certificate

## ACME Endpoints

- `/acme/directory` - ACME directory endpoint
- `/acme/new-nonce` - Get new nonce for request signing
- `/acme/new-account` - Create or get existing account
- `/acme/new-order` - Create new certificate order
- `/acme/authorization/:id` - Get authorization details
- `/acme/challenge/:id` - Process challenge completion
- `/acme/finalize-order/:id` - Finalize certificate order with CSR
- `/acme/certificate/:id` - Download issued certificate

## Client Compatibility

- Certbot
- acme.sh
- Caddy
- Traefik
- NGINX with certbot

## Configuration

- ACME server runs on port 8555 by default
- HTTP-01 challenges are served at `/.well-known/acme-challenge/:token`
