---
description: 
globs: 
alwaysApply: false
---
# Database Schema

LocalCA uses the file system for data storage, with a structured approach for certificates and CA information.

## Directory Structure

- `/data` - Root data directory (configurable)
  - `/ca` - CA certificate directory
    - `ca.crt` - CA certificate
    - `ca.key` - CA private key
    - `CA_NAME.txt` - CA name
    - `CA_KEY.txt` - CA key password
    - `O.txt` - Organization name
    - `C.txt` - Country code
  - `/[certificate-name]` - Individual certificate directories
    - `[name].crt` - Certificate file
    - `[name].key` - Private key file
    - `[name].p12` - PKCS#12 file (for client certificates)
    - `[name].pw` - Password file (for client certificates)
  - `/service` - Service certificate
    - `service.crt` - Service certificate
    - `service.key` - Service key
  - `/settings` - Application settings
    - `auth.json` - Authentication settings
    - `email.json` - Email notification settings

## Storage Implementation

The main storage implementation is in [pkg/storage/storage.go](mdc:pkg/storage/storage.go), which provides methods for:

- Creating directories
- Saving and retrieving CA information
- Managing certificate files
- Listing certificates
- Deleting certificates

## Certificate Metadata

Certificate information is stored in the certificate files themselves, which are parsed when needed. The following metadata is extracted:

- Common name
- Serial number
- Validity period
- Issuer information
- Subject Alternative Names (SANs)
- Key usage information

