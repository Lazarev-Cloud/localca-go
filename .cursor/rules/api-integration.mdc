---
description:
globs:
alwaysApply: false
---
# API Integration

This guide explains how to integrate with the LocalCA API for automated certificate management.

## API Authentication

LocalCA API endpoints use API key authentication:

- Add the `X-API-Key` header to your requests
- Configure API keys in the settings page

## Core API Endpoints

### CA Information

- `GET /api/ca/info` - Get CA information and status
  - Response includes CA certificate, name, and validity

### Certificate Management

- `GET /api/certificates` - List all certificates
- `GET /api/certificates/:id` - Get certificate details
- `POST /api/certificates/create` - Create a new certificate
- `POST /api/certificates/renew/:id` - Renew a certificate
- `POST /api/certificates/revoke/:id` - Revoke a certificate
- `DELETE /api/certificates/delete/:id` - Delete a certificate

### Settings Management

- `GET /api/settings` - Get application settings
- `POST /api/settings` - Update application settings

## ACME Protocol

For automated certificate issuance, use the ACME protocol:

- ACME server runs on port 8555
- Directory endpoint: `http://your-server:8555/acme/directory`
- Compatible with standard ACME clients (Certbot, acme.sh, etc.)

## API Client Examples

### Curl Examples

```bash
# Get CA information
curl -H "X-API-Key: your-api-key" https://localca.example.com/api/ca/info

# List certificates
curl -H "X-API-Key: your-api-key" https://localca.example.com/api/certificates

# Create a certificate
curl -X POST -H "X-API-Key: your-api-key" -H "Content-Type: application/json" \
  -d '{"commonName": "example.com", "sans": ["www.example.com"], "type": "server"}' \
  https://localca.example.com/api/certificates/create
```

### JavaScript Example

```javascript
// Get certificates
async function getCertificates() {
  const response = await fetch('/api/certificates', {
    headers: {
      'X-API-Key': 'your-api-key'
    }
  });
  return await response.json();
}
```

## Implementation

API routes are implemented in:
- [app/api/](mdc:app/api) - Frontend API routes
- [pkg/handlers/](mdc:pkg/handlers) - Backend API handlers
