---
description: 
globs: 
alwaysApply: false
---
# Certificate Lifecycle Management

LocalCA provides comprehensive lifecycle management for certificates, from creation to revocation. This document outlines the certificate workflows and key implementation details.

## Certificate Types

LocalCA supports two main types of certificates:

1. **Server Certificates**: For securing websites and services with TLS
   - Can include multiple Subject Alternative Names (SANs)
   - Generated as PEM format (.crt and .key files)
   - Also available as bundled files

2. **Client Certificates**: For client authentication
   - Exported as PKCS#12 (.p12) files for easy import into browsers and operating systems
   - Can be password-protected for additional security

## Certificate Creation

The certificate creation process is implemented in the [pkg/certificates](mdc:pkg/certificates) package:

1. **CA Certificate**: Created during initial setup
   - Implemented in [ca.go](mdc:pkg/certificates/ca.go)
   - Protected by a password
   - Has a configurable validity period (default: 10 years)

2. **Server Certificates**: Created via the web UI or API
   - Implemented in [server.go](mdc:pkg/certificates/server.go)
   - Support for multiple domain names (SANs)
   - Configurable validity period

3. **Client Certificates**: Created via the web UI or API
   - Implemented in [client.go](mdc:pkg/certificates/client.go)
   - Exported as password-protected PKCS#12 files

## Certificate Renewal

Certificates can be renewed before expiration:

- Preserves the same key pair and certificate subject
- Updates the validity period
- Generates new certificate files
- Updates the certificate database

## Certificate Revocation

Revoked certificates are added to the Certificate Revocation List (CRL):

- Implemented in [crl.go](mdc:pkg/certificates/crl.go)
- CRL is updated whenever a certificate is revoked
- CRL is available via HTTP for client validation

## Certificate Storage

All certificates are stored using the [pkg/storage](mdc:pkg/storage) package:

- CA certificate and private key
- Server certificates and private keys
- Client certificates and PKCS#12 files
- Certificate database with metadata
- Certificate Revocation List (CRL)

## ACME Protocol Integration

LocalCA implements the ACME protocol for automated certificate issuance:

- Compatible with standard ACME clients like certbot
- Supports HTTP-01 challenges for domain verification
- Certificates issued via ACME follow the same lifecycle management

## Certificate Expiry and Notifications

The application tracks certificate expiry dates and can send notifications:

1. The email notification system is in [pkg/email](mdc:pkg/email)
2. Notifications are sent based on configurable thresholds before expiry
