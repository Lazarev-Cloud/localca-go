---
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  security-events: write

jobs:
  test:
    name: Test & Security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm

      - name: Install Go dependencies
        run: go mod download

      - name: Install Node dependencies
        run: |
          npm pkg set dependencies.date-fns="^3.6.0"
          npm install --legacy-peer-deps

      - name: Run Go tests
        run: go test -v -race -coverprofile=coverage.out ./...

      - name: Run Go security scan (gosec)
        uses: securego/gosec@v2.21.4
        with:
          args: '-no-fail -fmt sarif -out gosec.sarif ./...'
        continue-on-error: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-ci.sarif'
          severity: 'HIGH,CRITICAL'
        continue-on-error: true

      - name: Run Node tests
        run: npm test -- --coverage --watchAll=false || true

      - name: Run Node linting
        run: npx eslint app components hooks lib || true

      - name: Upload gosec security results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: gosec.sarif

      - name: Upload Trivy security results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: trivy-ci.sarif

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}/localca:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max